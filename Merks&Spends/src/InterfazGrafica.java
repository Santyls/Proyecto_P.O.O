/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;
/**
 *
 * @author Joshua
 */
public class InterfazGrafica extends javax.swing.JFrame {
    
    /**
     * Creates new form InterfazGrafica
     */
    public InterfazGrafica() {
        initComponents();
        setLocationRelativeTo(null); // Centrar la ventana
    } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        MostrarBtn = new javax.swing.JButton();
        GraficaMostrada = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        jLabel1.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Merks & Spen - Gráfica de artículos más vendidos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(125, 125, 125))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        MostrarBtn.setText("Mostrar gráfico");
        MostrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GraficaMostradaLayout = new javax.swing.GroupLayout(GraficaMostrada);
        GraficaMostrada.setLayout(GraficaMostradaLayout);
        GraficaMostradaLayout.setHorizontalGroup(
            GraficaMostradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 659, Short.MAX_VALUE)
        );
        GraficaMostradaLayout.setVerticalGroup(
            GraficaMostradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 252, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MostrarBtn)
                .addGap(288, 288, 288))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(GraficaMostrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MostrarBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(GraficaMostrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MostrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarBtnActionPerformed
            System.out.println("Botón presionado - Conectando a BD...");

        try {
            // 1. Obtener datos REALES desde MySQL
            DefaultCategoryDataset dataset = obtenerDatosReales();

            // 2. Crear el gráfico con los datos reales
            JFreeChart chart = ChartFactory.createBarChart(
                "Artículos más vendidos en MERKS & SPEN", 
                "Artículos", 
                "Cantidad vendida", 
                dataset
            );

            // 3. Configurar el panel del gráfico
            ChartPanel chartPanel = new ChartPanel(chart) {
                @Override
                public Dimension getPreferredSize() {
                    return new Dimension(GraficaMostrada.getWidth(), GraficaMostrada.getHeight());
                }
            };

            // 4. Mostrar en el panel
            GraficaMostrada.removeAll();
            GraficaMostrada.setLayout(new BorderLayout());
            GraficaMostrada.add(chartPanel, BorderLayout.CENTER);
            GraficaMostrada.revalidate();
            GraficaMostrada.repaint();

            System.out.println("Gráfico generado con datos reales!");

        } catch (SQLException e) {
            System.err.println("Error de BD: " + e.getMessage());
            JOptionPane.showMessageDialog(this, 
                "Error al conectar con la BD: " + e.getMessage(), 
                "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            System.err.println("Error inesperado: " + e.getMessage());
            JOptionPane.showMessageDialog(this, 
                "Error al generar gráfico: " + e.getMessage(), 
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_MostrarBtnActionPerformed
    private DefaultCategoryDataset obtenerDatosReales() throws SQLException {
    DefaultCategoryDataset dataset = new DefaultCategoryDataset();
    Connection conex = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    
    try {
        // 1. Conectar a la BD
        conex = ConexionMySQL.conectar();
        System.out.println("Conexión a BD establecida");
        
        // 2. Consulta SQL para los 5 productos más vendidos
        String sql = "SELECT a.nombre AS articulo, SUM(sa.cantidad) AS total_vendido FROM solicitud_articulo sa JOIN articulos a ON sa.id_articulo = a.id_articulo GROUP BY a.nombre ORDER BY total_vendido DESC LIMIT 5;";
        
        ps = conex.prepareStatement(sql);
        rs = ps.executeQuery();
        System.out.println("Consulta SQL ejecutada");
        
        // 3. Procesar resultados
        while (rs.next()) {
            String articulo = rs.getString("articulo");
            int totalVendido = rs.getInt("total_vendido");
            dataset.addValue(totalVendido, "Ventas", articulo);
            System.out.println("Dato obtenido: " + articulo + " - " + totalVendido);
        }
        
    } finally {
        // 4. Cerrar recursos en orden inverso
        if (rs != null) rs.close();
        if (ps != null) ps.close();
        if (conex != null) conex.close();
        System.out.println("Conexiones cerradas");
    }
    
    return dataset;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazGrafica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GraficaMostrada;
    private javax.swing.JButton MostrarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
